Git, a distributed version control system widely used in software development. Git helps developers track changes in their code, collaborate with team members, and manage different versions of a project efficiently.
I began by understanding basic concepts like repositories, commits, branches, and merges. Creating a local repository and pushing it to a remote repository like GitHub gave me hands-on experience with real-world workflows. I practiced using essential Git commands such as git init, git add, git commit, git push, and git pull.
I also explored how branching works in Git. Branches allow parallel development, which is incredibly helpful when working on new features or fixing bugs without affecting the main codebase. I learned how to create, switch between, and merge branches using git checkout and git merge.
Understanding the role of .gitignore files and commit messages has helped me maintain clean and readable repositories. I’ve started exploring more advanced concepts like rebasing, stashing, resolving merge conflicts, and using Git logs for history inspection.
Additionally, I familiarized myself with tools like GitHub Desktop and VS Code Git integration, which simplify many Git operations. Collaborating via pull requests and reviewing code changes is also part of my learning journey.
Overall, learning Git has been a rewarding experience. It’s a critical skill for modern developers, and I’m continuing to build confidence by applying it to small projects and exploring best practices in version control.
